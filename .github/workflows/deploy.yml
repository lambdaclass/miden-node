name: Deploy
run-name: Deploy ${{ inputs.network }} - ${{ inputs.gitref }}
on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Deployment instance'
        required: true
        type: choice
        options:
          - devnet
          - testnet

      gitref:
        description: 'Version, branch or commit to deploy'
        required: true
        type: string

# Limit concurrency to 1 per network.
concurrency:
  group: ${{ github.workflow }}-${{ inputs.network }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: write

jobs:
  deploy:
    name: ${{ inputs.network }} - ${{ inputs.gitref }}
    runs-on:
      labels: ubuntu-latest

    env:
      node-package: node-${{ github.run_id }}-${{ github.run_number }}.arm64.deb
      faucet-package: faucet-${{ github.run_id }}-${{ github.run_number }}.arm64.deb
      server_ip: ${{ secrets.SERVER_IP }}
      ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
      ssh_user: admin
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Download from github if its a version tag referece.
      - name: Download from releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          node-artifact:   miden-node-${{ inputs.gitref }}-arm64.deb
          faucet-artifact: miden-faucet-${{ inputs.gitref }}-arm64.deb
        run: |
          gh release download ${{ inputs.gitref }} -p ${{ env.node-artifact }}
          gh release download ${{ inputs.gitref }} -p ${{ env.node-artifact }}.checksum
          gh release download ${{ inputs.gitref }} -p ${{ env.faucet-artifact }}
          gh release download ${{ inputs.gitref }} -p ${{ env.faucet-artifact }}.checksum

          sha256sum --check ${{ env.node-artifact }}.checksum
          sha256sum --check ${{ env.faucet-artifact }}.checksum

          mv ${{ env.node-artifact }} ${{ env.node-package }}
          mv ${{ env.faucet-artifact }} ${{ env.faucet-package }}

      - name: Write SSH key
        run: |
          echo "${{ env.ssh_key }}" > key.pem
          chmod 600 key.pem

      - name: Upload packages via scp
        run: |
          scp -i key.pem -o StrictHostKeyChecking=no ${{ env.node-package }} ${{ env.faucet-package }} ${{ env.ssh_user }}@${{ env.server_ip }}:/tmp/

      - name: Install and configure on remote server
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ env.ssh_user }}@${{ env.server_ip }} << 'EOF'
            sudo systemctl stop miden-node || true
            sudo systemctl stop miden-faucet || true
            sudo apt remove miden-node miden-faucet -y || true
            sudo dpkg -i /tmp/${{ env.node-package }}
            sudo dpkg -i /tmp/${{ env.faucet-package }}
            if [ ! -f /opt/miden-node/miden-store.sqlite3 ]; then
              sudo /usr/bin/miden-node bundled bootstrap --data-directory /opt/miden-node --accounts-directory /opt/miden-faucet
            fi
            sudo /usr/bin/miden-faucet init -c /etc/opt/miden-faucet/miden-faucet.toml -f /opt/miden-faucet/account.mac
            sudo chown -R miden-node /opt/miden-node
            sudo chown -R miden-faucet /opt/miden-faucet
            sudo systemctl daemon-reload
            sudo systemctl start miden-node
            sudo systemctl start miden-faucet
          EOF
